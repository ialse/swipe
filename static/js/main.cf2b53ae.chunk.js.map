{"version":3,"sources":["components/Text/Text.js","components/SlideLeft/SlideLeft.js","components/SlideRight/SlideRight.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["Text","text","className","SlideLeft","useState","arrText","setArrText","setText","value","onChange","e","target","onClick","newArr","map","item","index","SlideRight","time","setTime","setInterval","date","Date","minutes","getMinutes","seconds","getSeconds","currTime","getHours","App","startX","setStartX","moveTrans","setMoveTrans","leftOffset","setLeftOffset","page","useRef","setPropLeft","offset","current","style","left","ref","onTouchMove","dist","touches","pageX","dirSwipe","onTouchStart","onTouchEnd","changedTouches","isMinDist","Math","abs","offsetWidth","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ySAWeA,MARf,YAAyB,IAATC,EAAQ,EAARA,KACd,OACE,qBAAKC,UAAU,uBAAf,SACE,sBAAMA,UAAU,oBAAhB,SAAqCD,OC4B5BE,MA9Bf,YAAwB,qBACQC,mBAAS,IADlB,mBACdC,EADc,KACLC,EADK,OAEGF,mBAAS,IAFZ,mBAEdH,EAFc,KAERM,EAFQ,KAarB,OACE,sBAAKL,UAAU,aAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,0BAAUA,UAAU,yBAAyBM,MAAOP,EAAMQ,SAZhE,SAAsBC,GACpBH,EAAQG,EAAEC,OAAOH,UAYb,wBAAQN,UAAU,kBAAkBU,QAT1C,WACE,IAAMC,EAAM,sBAAOR,GAAP,CAAgBJ,IAC5BK,EAAWO,IAOP,uEAIF,qBAAKX,UAAU,mBAAf,SACGG,EAAQS,KAAI,SAACC,EAAMC,GAClB,OAAO,cAAC,EAAD,CAAkBf,KAAMc,GAAbC,Y,MCTbC,MAff,WAAuB,IAAD,EACIb,mBAAS,IADb,mBACbc,EADa,KACPC,EADO,KAYpB,OAVAC,aAAY,WACV,IAAMC,EAAO,IAAIC,KACbC,EAAUF,EAAKG,aACfC,EAAUJ,EAAKK,aACnBH,EAAUA,EAAU,GAAK,IAAMA,EAAUA,EACzCE,EAAUA,EAAU,GAAK,IAAMA,EAAUA,EACzC,IAAME,EAAQ,UAAMN,EAAKO,WAAX,YAAyBL,EAAzB,YAAoCE,GAClDN,EAAQQ,KACP,KAEI,qBAAKzB,UAAU,cAAf,SAA8BgB,KCyDxBW,MAjEf,WAAgB,IAAD,EACezB,mBAAS,GADxB,mBACN0B,EADM,KACEC,EADF,OAEqB3B,mBAAS,IAF9B,mBAEN4B,EAFM,KAEKC,EAFL,OAGuB7B,mBAAS,GAHhC,mBAGN8B,EAHM,KAGMC,EAHN,KAIPC,EAAOC,iBAAO,MAQpB,SAASC,EAAYC,GACnBH,EAAKI,QAAQC,MAAMC,KAAOH,EAAS,KAsCrC,OACE,sBACErC,UAAS,eAAU8B,GACnBW,IAAKP,EACLQ,YAvCJ,SAAoBlC,GAClB,IAAMmC,EAAOf,EAASpB,EAAEoC,QAAQ,GAAGC,MAC7BC,EAAWH,EAAO,EAAI,QAAU,OAGpCP,EADGJ,GAA2B,UAAbc,IAA2Bd,GAA2B,SAAbc,EAC9Cd,EAEAA,EAAaW,IAiCzBI,aAlDJ,SAA0BvC,GACxBuB,EAAa,IACbF,EAAUrB,EAAEoC,QAAQ,GAAGC,QAiDrBG,WA9BJ,SAAwBxC,GACtB,IAAMmC,EAAOf,EAASpB,EAAEyC,eAAe,GAAGJ,MACpCC,EAAWH,EAAO,EAAI,QAAU,OAGtC,KAAkB,UAAbG,GAAwBd,GAA6B,SAAbc,IAAwBd,GAArE,CAIA,IAAMkB,EAAYC,KAAKC,IAAIT,GAAQT,EAAKI,QAAQe,YAAc,EACxDhB,EAASH,EAAKI,QAAQe,YAAc,EAErCrB,GAAckB,IAAgBA,IAAclB,GAC/CI,EAAY,GACZH,EAAc,KAEdG,GAAaC,GACbJ,GAAeI,IAGjBN,EAAa,aACbF,EAAU,KAIV,UAOE,cAAC,EAAD,IACA,cAAC,EAAD,QCvDSyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1Bb,M","file":"static/js/main.cf2b53ae.chunk.js","sourcesContent":["import { useState } from 'react';\r\nimport './Text.css';\r\n\r\nfunction Text({ text }) {\r\n  return (\r\n    <div className=\"slide-right__wrapper\">\r\n      <span className=\"slide-right__text\">{text}</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Text;\r\n","import { useState } from 'react';\r\nimport './SlideLeft.css';\r\nimport Text from '../Text/Text';\r\n\r\nfunction SlideLeft({}) {\r\n  const [arrText, setArrText] = useState([]);\r\n  const [text, setText] = useState('');\r\n\r\n  function handleChange(e) {\r\n    setText(e.target.value);\r\n  }\r\n\r\n  function handleClick() {\r\n    const newArr = [...arrText, text];\r\n    setArrText(newArr);\r\n  }\r\n\r\n  return (\r\n    <div className=\"slide-left\">\r\n      <div className=\"slide-left__header\">\r\n        <textarea className=\"slide-left__input-text\" value={text} onChange={handleChange}></textarea>\r\n        <button className=\"slide-left__btn\" onClick={handleClick}>\r\n          Отправить\r\n        </button>\r\n      </div>\r\n      <div className=\"slide-left__main\">\r\n        {arrText.map((item, index) => {\r\n          return <Text key={index} text={item} />;\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SlideLeft;\r\n","import { useState } from 'react';\r\nimport './SlideRight.css';\r\n\r\nfunction SlideRight() {\r\n  const [time, setTime] = useState('');\r\n  setInterval(() => {\r\n    const date = new Date();\r\n    let minutes = date.getMinutes();\r\n    let seconds = date.getSeconds();\r\n    minutes = minutes < 10 ? '0' + minutes : minutes;\r\n    seconds = seconds < 10 ? '0' + seconds : seconds;\r\n    const currTime = `${date.getHours()}:${minutes}:${seconds}`;\r\n    setTime(currTime);\r\n  }, 300);\r\n\r\n  return <div className=\"slide-right\">{time}</div>;\r\n}\r\n\r\nexport default SlideRight;\r\n","import './App.css';\r\n\r\nimport SlideLeft from '../SlideLeft/SlideLeft';\r\nimport SlideRight from '../SlideRight/SlideRight';\r\n\r\nimport { useRef, useState } from 'react';\r\n\r\nfunction App() {\r\n  const [startX, setStartX] = useState(0); //начальная координата (куда тапнули)\r\n  const [moveTrans, setMoveTrans] = useState(''); // установка класса для анимации\r\n  const [leftOffset, setLeftOffset] = useState(0); //Есть сдвиг или нет\r\n  const page = useRef(null);\r\n\r\n  function handleTouchStart(e) {\r\n    setMoveTrans('');\r\n    setStartX(e.touches[0].pageX);\r\n  }\r\n\r\n  // устанавливаем ширину\r\n  function setPropLeft(offset) {\r\n    page.current.style.left = offset + 'px';\r\n  }\r\n\r\n  function handleMove(e) {\r\n    const dist = startX - e.touches[0].pageX;\r\n    const dirSwipe = dist > 0 ? 'right' : 'left'; //определение направления свайпа\r\n\r\n    if ((leftOffset && dirSwipe === 'right') || (!leftOffset && dirSwipe === 'left')) {\r\n      setPropLeft(leftOffset);\r\n    } else {\r\n      setPropLeft(leftOffset - dist);\r\n    }\r\n  }\r\n\r\n  function handleTouchEnd(e) {\r\n    const dist = startX - e.changedTouches[0].pageX; // определение размера свайпа\r\n    const dirSwipe = dist > 0 ? 'right' : 'left'; //определение направления свайпа\r\n\r\n    // Если свайп не в ту сторону, то выходим\r\n    if ((dirSwipe === 'right' && leftOffset) || (dirSwipe === 'left' && !leftOffset)) {\r\n      return;\r\n    }\r\n\r\n    const isMinDist = Math.abs(dist) > page.current.offsetWidth / 6 ? true : false; //определение минимального свайпа (треть ширины экрана)\r\n    const offset = page.current.offsetWidth / 2; // определение размера смещения\r\n\r\n    if ((leftOffset && isMinDist) || (!isMinDist && !leftOffset)) {\r\n      setPropLeft(0);\r\n      setLeftOffset(0);\r\n    } else {\r\n      setPropLeft(-offset);\r\n      setLeftOffset(-offset);\r\n    }\r\n\r\n    setMoveTrans('page_move');\r\n    setStartX(0);\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={`page ${moveTrans}`}\r\n      ref={page}\r\n      onTouchMove={handleMove}\r\n      onTouchStart={handleTouchStart}\r\n      onTouchEnd={handleTouchEnd}\r\n    >\r\n      <SlideLeft />\r\n      <SlideRight />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}